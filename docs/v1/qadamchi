#!/usr/bin/env php
<?php
/**
 * Qadamchi CLI â€“ Simple command line tool for Qadamchi framework.
 * Usage: php qadamchi make:controller ControllerName
 */

$argv = $_SERVER['argv'];
$argc = $_SERVER['argc'];

function printHelp() {
    echo "Qadamchi CLI\n";
    echo "Usage:\n";
    echo "  php qadamchi make:controller ControllerName\n";
    echo "  php qadamchi make:model ModelName\n";
    echo "  php qadamchi make:migration migration_name\n";
    echo "  php qadamchi make:middleware MiddlewareName\n";
    echo "  php qadamchi make:seeder SeederName\n";
    echo "  php qadamchi --help\n";
}

if ($argc < 2 || in_array($argv[1], ['-h', '--help', 'help'])) {
    printHelp();
    exit;
}

$command = $argv[1];
$name = $argv[2] ?? null;

switch ($command) {
    case 'make:controller':
        if (!$name) {
            echo "Controller name required!\n";
            exit(1);
        }
        $controllerPath = "app/Controllers/{$name}.php";
        if (file_exists($controllerPath)) {
            echo "Controller already exists: $controllerPath\n";
            exit(1);
        }
        $controllerContent = <<<EOT
<?php
namespace App\Controllers;

use Controller;

class {$name} extends Controller {
    public function index() {
        // 
    }
}
EOT;
        file_put_contents($controllerPath, $controllerContent);
        echo "Controller created: $controllerPath\n";
        break;

    case 'make:model':
        if (!$name) {
            echo "Model name required!\n";
            exit(1);
        }
        $modelPath = "app/Models/{$name}.php";
        if (file_exists($modelPath)) {
            echo "Model already exists: $modelPath\n";
            exit(1);
        }
        $modelContent = <<<EOT
<?php
namespace App\Models;

use Model;

class {$name} extends Model {
    // 
}
EOT;
        file_put_contents($modelPath, $modelContent);
        echo "Model created: $modelPath\n";
        break;

    case 'make:migration':
        if (!$name) {
            echo "Migration name required!\n";
            exit(1);
        }
        $timestamp = date('Y_m_d_His');
        $migrationName = $timestamp . '_' . $name;
        $migrationPath = "app/Migrations/{$migrationName}.php";
        $migrationContent = <<<EOT
<?php
use Migration;

class {$migrationName} extends Migration {
    public function up() {
        //
    }
    public function down() {
        //
    }
}
EOT;
        file_put_contents($migrationPath, $migrationContent);
        echo "Migration created: $migrationPath\n";
        break;

    case 'make:middleware':
        if (!$name) {
            echo "Middleware name required!\n";
            exit(1);
        }
        $middlewarePath = "app/Middlewares/{$name}.php";
        $middlewareContent = <<<EOT
<?php
namespace App\Middlewares;

use Middleware;

class {$name} extends Middleware {
    public function handle(\$request, \$next) {
        // 
        return \$next(\$request);
    }
}
EOT;
        file_put_contents($middlewarePath, $middlewareContent);
        echo "Middleware created: $middlewarePath\n";
        break;

    case 'make:seeder':
        if (!$name) {
            echo "Seeder name required!\n";
            exit(1);
        }
        $seederPath = "app/Seeders/{$name}.php";
        $seederContent = <<<EOT
<?php
use Seeder;

class {$name} extends Seeder {
    public function run() {
        // 
    }
}
EOT;
        file_put_contents($seederPath, $seederContent);
        echo "Seeder created: $seederPath\n";
        break;

    default:
        echo "Unknown command: $command\n";
        printHelp();
        exit(1);
}
